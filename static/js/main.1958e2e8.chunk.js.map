{"version":3,"sources":["MyProvider.js","Table.js","Form.js","App.js","index.js"],"names":["MContext","React","createContext","MyProvider","state","message","Provider","value","this","setMessage","setState","props","children","Component","TableHeader","TableBody1","rows","characterData2","map","row","index","name","job","onClick","removeCharacter","Consumer","context","Table","characterData11","Form","initialState","handleChange","event","target","sendData","parentCallback","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","callbackFunction","childData","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1958e2e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport const MContext = React.createContext();  //exporting context object\r\n\r\nclass MyProvider extends Component {\r\nstate = {message: \"\"}\r\n\r\n//this indicates that the global store is accessible to all the child tags with MyProvider as Parent\r\nrender() {\r\n        return (\r\n            <MContext.Provider value={\r\n            {   state: this.state,\r\n                setMessage: (value) => \r\n                this.setState({message: value })}} >\r\n            {this.props.children} \r\n             </MContext.Provider>)\r\n    }\r\n}\r\n\r\nexport default MyProvider","import React, {Component} from 'react'\r\nimport {MContext} from './MyProvider'\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nconst TableBody = (props1) => {\r\n    const rows = props1.characterData2.map((row, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{row.name}</td>\r\n          <td>{row.job}</td>\r\n           <td>\r\n                <button onClick={()  => this.props1.removeCharacter(index)}>Delete</button> \r\n                </td>\r\n        </tr>\r\n      )\r\n    })\r\n  \r\n    return <tbody>{rows}</tbody>\r\n  }\r\n\r\n  class TableBody1 extends Component {\r\n      render() {\r\n        const rows = this.props.characterData2.map((row, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                <button onClick={()  => this.props.removeCharacter(index)}>Delete</button> \r\n                </td>\r\n                <td>        \r\n                    <MContext.Consumer>\r\n                    {(context) => (\r\n                    <button onClick={()=>{\r\n                        \r\n                        const name = row.name\r\n\r\n                        return (context.setMessage(name))\r\n                        \r\n                        }}> Copy to form </button>\r\n                    )}\r\n                    </MContext.Consumer>\r\n                </td>\r\n              </tr>\r\n            )     \r\n          }            \r\n         )  \r\n         return (\r\n            <tbody>{rows}</tbody> \r\n            )    \r\n  }\r\n}\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    //const {characterData1} = this.props\r\n    const {characterData11, removeCharacter} = this.props\r\n    return (\r\n        <table>\r\n        <TableHeader />\r\n        <TableBody1 characterData2 ={characterData11} removeCharacter={removeCharacter}  />\r\n        \r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table","import React, {Component} from 'react'\r\nimport {MContext} from './MyProvider'\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: '',\r\n    job: '',\r\n  }\r\n\r\n  state = this.initialState\r\n\r\n  handleChange = (event) => {\r\n    const {name, value} = event.target\r\n  \r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  sendData = () => {\r\n    this.props.parentCallback(\"Hey Popsie, Howâ€™s it going?\");\r\n}\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state)\r\n    this.setState(this.initialState)\r\n    this.sendData()\r\n  }\r\n\r\n  render() {\r\n    const { name, job } = this.state;  \r\n    return (\r\n        <div>\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}         \r\n          onChange={this.handleChange} />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}         \r\n          onChange={this.handleChange} />\r\n         <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n      </form>  \r\n      <div>\r\n            <MContext.Consumer>\r\n             {(context) => (\r\n              <p>{context.state.message}</p>)}\r\n            </MContext.Consumer>\r\n         </div>   \r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Table from './Table'\r\nimport Form from './Form'\r\nimport MyProvider from './MyProvider'\r\n\r\nexport class App extends Component {    \r\n        state = {\r\n        message:\" initial message\",\r\n        characters :  [\r\n            {\r\n              name: 'Charlie2',\r\n              job: 'Janitor8',\r\n            },\r\n            {\r\n              name: 'Mac',\r\n              job: 'Bouncer',\r\n            },\r\n            {\r\n              name: 'Dee',\r\n              job: 'Aspring actress',\r\n            },\r\n            {\r\n              name: 'Dennis2',\r\n              job: 'Bartender',\r\n            },\r\n          ]\r\n        };\r\n\r\n        callbackFunction = (childData) => {\r\n            this.setState({message: childData})\r\n        }\r\n\r\n        removeCharacter = (index) => {\r\n            const characters = this.state.characters\r\n          \r\n            this.setState({\r\n              characters: characters.filter((character, i) => {\r\n                return i !== index\r\n              }),\r\n            })\r\n          }\r\n        handleSubmit = (character) => {\r\n            this.setState({characters: [...this.state.characters, character]})\r\n          }\r\n        render() {\r\n            const  characters  = this.state.characters\r\n            const message = this.state.message\r\n          \r\n            return (\r\n              <div className=\"container\">\r\n              <MyProvider>\r\n              <h1>{message}</h1>\r\n                <Table characterData11={characters} \r\n                        removeCharacter={this.removeCharacter}                       \r\n                         />\r\n                <Form handleSubmit={this.handleSubmit}\r\n                     parentCallback = {this.callbackFunction}\r\n                />\r\n                </MyProvider>\r\n              </div>\r\n            )\r\n          }\r\n    }\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}